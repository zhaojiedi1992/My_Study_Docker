<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>5. dockerfile参考</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/copybutton.css" type="text/css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" type="text/css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="dockerfile">
<h1>5. dockerfile参考</h1>
<div class="section" id="id1">
<h2>5.1. 使用</h2>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>docker build
docker build -t zhaojiedi1992/helloworld:v1.0 -t zhaojiedi1992/helloworld:latest  -f  -f /path/to/a/Dockerfile .
</pre></div>
</div>
</div>
<div class="section" id="id2">
<h2>5.2. 注释</h2>
<p>dockefile中注释使用#开头。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="c"># 这是一个注释行</span>
</pre></div>
</div>
</div>
<div class="section" id="id3">
<h2>5.3. 转义</h2>
<p>dockerfile中使用来转义空格、换行符等。</p>
</div>
<div class="section" id="id4">
<h2>5.4. 环境变量替换</h2>
<p>环境变量通过ENV指定，支持bash操作的。比如${foo},${foo-abc}等</p>
<p>可以使用环境变量的片段为:</p>
<ul class="simple">
<li><p>ADD</p></li>
<li><p>COPY</p></li>
<li><p>ENV</p></li>
<li><p>EXPOSE</p></li>
<li><p>FROM</p></li>
<li><p>LABEL</p></li>
<li><p>STOPSIGNAL</p></li>
<li><p>USER</p></li>
<li><p>VOLUME</p></li>
<li><p>WORKDIR</p></li>
</ul>
<div class="admonition note">
<p class="admonition-title">注解</p>
<p>在1.4版本之后，ONBUILD也支持使用环境变量了。</p>
</div>
</div>
<div class="section" id="dockerignore">
<h2>5.5. .dockerignore文件</h2>
<p>dockerfile 主要配合add,copy使用，包含在dockerignore的配置被过滤掉的。具体的语法类似gitignore文件。</p>
</div>
<div class="section" id="from">
<h2>5.6. FROM</h2>
<p>FROM用于指定基础镜像的名字。</p>
<p>用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">FROM</span><span class="s"> &lt;image&gt; [AS &lt;name&gt;]</span>
<span class="k">FROM</span><span class="s"> &lt;image&gt;[:&lt;tag&gt;] [AS &lt;name&gt;]</span>
<span class="k">FROM</span><span class="s"> &lt;image&gt;[@&lt;digest&gt;] [AS &lt;name&gt;]</span>
</pre></div>
</div>
<p>使用样例</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>ARG  <span class="nv">CODE_VERSION</span><span class="o">=</span>latest
<span class="k">FROM</span><span class="s"> base:${CODE_VERSION}</span>
<span class="k">CMD</span><span class="s">  /code/run-app</span>
</pre></div>
</div>
<p>ARG不同于ENV的，ARG作用于docker命令构建的时候，ENV是在镜像构建后，实例化的时候运行的。</p>
</div>
<div class="section" id="run">
<h2>5.7. RUN</h2>
<p>RUN有2种格式用法</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">RUN</span> &lt;command&gt;
<span class="k">RUN</span> <span class="o">[</span><span class="s2">&quot;executable&quot;</span>, <span class="s2">&quot;param1&quot;</span>, <span class="s2">&quot;param2&quot;</span><span class="o">]</span>
</pre></div>
</div>
</div>
<div class="section" id="cmd">
<h2>5.8. CMD</h2>
<p>CMD有三种格式用法。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">CMD</span><span class="s"> [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</span>
<span class="k">CMD</span><span class="s"> [&quot;param1&quot;,&quot;param2&quot;]</span>
<span class="k">CMD</span><span class="s"> command param1 param2</span>
</pre></div>
</div>
</div>
<div class="section" id="label">
<h2>5.9. LABEL</h2>
<p>LABEL用于定义描述信息。是一个key,value对</p>
<p>用法:</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>LABEL &lt;key&gt;<span class="o">=</span>&lt;value&gt; &lt;key&gt;<span class="o">=</span>&lt;value&gt; &lt;key&gt;<span class="o">=</span>&lt;value&gt; ...
</pre></div>
</div>
<p>定义的LABEL信息，可以通过docker inspect命令获取镜像的LABEL信息。</p>
</div>
<div class="section" id="maintainer">
<h2>5.10. MAINTAINER (已经弃用了)</h2>
<p>使用如下设置维护者。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>LABEL <span class="nv">maintainer</span><span class="o">=</span><span class="s2">&quot;SvenDowideit@home.org.au&quot;</span>
</pre></div>
</div>
</div>
<div class="section" id="expose">
<h2>5.11. EXPOSE</h2>
<p>用于指定需要暴露的的端口，用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">EXPOSE</span><span class="s"> &lt;port&gt; [&lt;port&gt;/&lt;protocol&gt;...]</span>
</pre></div>
</div>
<p>样例：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">EXPOSE</span><span class="s"> 80/tcp</span>
<span class="k">EXPOSE</span><span class="s"> 80/udp</span>
</pre></div>
</div>
<p>我们可以在docker运行时重设这些设置信息。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>docker run -p <span class="m">80</span>:80/tcp -p <span class="m">80</span>:80/udp ...
</pre></div>
</div>
</div>
<div class="section" id="env">
<h2>5.12. ENV</h2>
<p>用于定义运行时的变量</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">ENV</span><span class="s"> &lt;key&gt; &lt;value&gt;</span>
<span class="k">ENV</span><span class="s"> &lt;key&gt;=&lt;value&gt; ...</span>
</pre></div>
</div>
<p>样例：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">ENV</span><span class="s"> myName=&quot;John Doe&quot; myDog=Rex\ The\ Dog \</span>
    <span class="nv">myCat</span><span class="o">=</span>fluffy
</pre></div>
</div>
</div>
<div class="section" id="add">
<h2>5.13. ADD</h2>
<p>用于从当前的目录复制文件到镜像中去</p>
<div class="highlight-dockerifle notranslate"><div class="highlight"><pre><span></span>ADD [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;
ADD [--chown=&lt;user&gt;:&lt;group&gt;] [&quot;&lt;src&gt;&quot;,... &quot;&lt;dest&gt;&quot;]
</pre></div>
</div>
</div>
<div class="section" id="copy">
<h2>5.14. COPY</h2>
<p>用于从当前的目录复制文件到镜像中去</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>COPY <span class="o">[</span>--chown<span class="o">=</span>&lt;user&gt;:&lt;group&gt;<span class="o">]</span> &lt;src&gt;... &lt;dest&gt;
COPY <span class="o">[</span>--chown<span class="o">=</span>&lt;user&gt;:&lt;group&gt;<span class="o">]</span> <span class="o">[</span><span class="s2">&quot;&lt;src&gt;&quot;</span>,... <span class="s2">&quot;&lt;dest&gt;&quot;</span><span class="o">]</span>
</pre></div>
</div>
</div>
<div class="section" id="entrypoint">
<h2>5.15. ENTRYPOINT</h2>
<p>ENTRYPOINT用于定义进入点，用法2种。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">ENTRYPOINT</span><span class="s"> [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span>
<span class="k">ENTRYPOINT</span><span class="s"> command param1 param2</span>
</pre></div>
</div>
<p>样例：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">FROM</span><span class="s"> ubuntu</span>
<span class="k">ENTRYPOINT</span><span class="s"> [&quot;top&quot;, &quot;-b&quot;]</span>
<span class="k">CMD</span><span class="s"> [&quot;-c&quot;]</span>
</pre></div>
</div>
<p>如果docker运行的时候想重写ENTRYPOINT,可以指定–entrypoint 选项。</p>
<p>ENTRYPOINT 和CMD</p>
<table class="docutils">
<colgroup>
<col style="width: 25%" />
<col style="width: 25%" />
<col style="width: 25%" />
<col style="width: 25%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"></th>
<th class="head"><p>ENTRYPOINT     “ENTRYPOINT exec_entry p1_entry”</p></th>
<th class="head"><p>ENTRYPOINT [exec_entry, p1_entry]</p></th>
<th class="head"></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>No CMD</p></td>
<td><p>error, not allowed</p></td>
<td><p>/bin/sh -c exec_entry p1_entry</p></td>
<td><p>exec_entry p1_entry</p></td>
</tr>
<tr class="row-odd"><td><p>CMD [exec_cmd, p1_cmd]</p></td>
<td><p>exec_cmd p1_cmd</p></td>
<td><p>/bin/sh -c exec_entry p1_entry</p></td>
<td><p>exec_entry p1_entry exec_cmd p1_cmd</p></td>
</tr>
<tr class="row-even"><td><p>CMD [p1_cmd, p2_cmd]</p></td>
<td><p>p1_cmd p2_cmd</p></td>
<td><p>/bin/sh -c exec_entry p1_entry</p></td>
<td><p>exec_entry p1_entry p1_cmd p2_cmd</p></td>
</tr>
<tr class="row-odd"><td><p>CMD exec_cmd p1_cmd</p></td>
<td><p>/bin/sh -c exec_cmd p1_cmd</p></td>
<td><p>/bin/sh -c exec_entry p1_entry</p></td>
<td><p>exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="volume">
<h2>5.16. VOLUME</h2>
<p>用于设置卷，用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">VOLUME</span><span class="s"> [&quot;/data&quot;]</span>
</pre></div>
</div>
</div>
<div class="section" id="user">
<h2>5.17. USER</h2>
<p>设置运行的用户身份，用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>USER &lt;user&gt;<span class="o">[</span>:&lt;group&gt;<span class="o">]</span> or
USER &lt;UID&gt;<span class="o">[</span>:&lt;GID&gt;<span class="o">]</span>
</pre></div>
</div>
</div>
<div class="section" id="workdir">
<h2>5.18. WORKDIR</h2>
<p>设置工作目录，对RUN,CMD,ENTRYPOINT,COPY,ADD都是有影响的。</p>
<p>样例：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">WORKDIR</span><span class="s"> /a</span>
<span class="k">WORKDIR</span><span class="s"> b</span>
<span class="k">WORKDIR</span><span class="s"> c</span>
<span class="k">RUN</span> pwd
</pre></div>
</div>
<p>上面的打印结果为/a/b/c的。</p>
</div>
<div class="section" id="arg">
<h2>5.19. ARG</h2>
<p>ARG用于指定参数，用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>ARG &lt;name&gt;<span class="o">[=</span>&lt;default value&gt;<span class="o">]</span>
</pre></div>
</div>
<p>样例：</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>docker build --build-arg &lt;varname&gt;<span class="o">=</span>&lt;value&gt;
</pre></div>
</div>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="k">FROM</span><span class="s"> ubuntu</span>
ARG CONT_IMG_VER
<span class="k">ENV</span><span class="s"> CONT_IMG_VER ${CONT_IMG_VER:-v1.0.0}</span>
<span class="k">RUN</span> <span class="nb">echo</span> <span class="nv">$CONT_IMG_VER</span>
</pre></div>
</div>
</div>
<div class="section" id="onbuild">
<h2>5.20. ONBUILD</h2>
<p>ONBUILD会在此镜像作为其他镜像的基础镜像的时候被执行。</p>
<p>构建步骤：</p>
<ol class="arabic simple">
<li><p>当遇到ONBUILD指令时，构建器会向正在构建的镜像的元数据添加触发器。 该指令不会影响当前构建。</p></li>
<li><p>在构建结束时，所有触发器的列表都存储在映像清单中的OnBuild键下。 可以使用docker inspect命令检查它们。</p></li>
<li><p>稍后，可以使用FROM指令将镜像用作新构建的基础。 作为处理FROM指令的一部分，下游构建器查找ONBUILD触发器，并按照它们注册的顺序执行它们。
如果任何触发器失败，则中止FROM指令，这反过来导致构建失败。 如果所有触发器都成功，则FROM指令完成，并且构建继续照常进行。</p></li>
<li><p>执行后，触发器将从最终镜像中清除。</p></li>
</ol>
<p>样例：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span><span class="o">[</span>...<span class="o">]</span>
<span class="n n-Keyword">ONBUILD</span><span class="w"> </span><span class="k">ADD</span> . /app/src
ONBUILD RUN /usr/local/bin/python-build --dir /app/src
<span class="o">[</span>...<span class="o">]</span>
</pre></div>
</div>
</div>
<div class="section" id="stopsignal">
<h2>5.21. STOPSIGNAL</h2>
<p>设置发送的信号。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>STOPSIGNAL SIGKILL
</pre></div>
</div>
</div>
<div class="section" id="healthcheck">
<h2>5.22. HEALTHCHECK</h2>
<p>提供健康检查功能，用法：</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>HEALTHCHECK <span class="o">[</span>OPTIONS<span class="o">]</span> CMD command
HEALTHCHECK NONE

    # 选项有
    --interval<span class="o">=</span>DURATION <span class="o">(</span>default: 30s<span class="o">)</span>
    --timeout<span class="o">=</span>DURATION <span class="o">(</span>default: 30s<span class="o">)</span>
    --start-period<span class="o">=</span>DURATION <span class="o">(</span>default: 0s<span class="o">)</span>
    --retries<span class="o">=</span>N <span class="o">(</span>default: <span class="m">3</span><span class="o">)</span>
</pre></div>
</div>
</div>
<div class="section" id="shell">
<h2>5.23. SHELL</h2>
<p>指定shell的，用法。</p>
<div class="highlight-dockerfile notranslate"><div class="highlight"><pre><span></span>SHELL <span class="o">[</span><span class="s2">&quot;executable&quot;</span>, <span class="s2">&quot;parameters&quot;</span><span class="o">]</span>
<span class="c"># 在linux下为  [&quot;/bin/sh&quot;, &quot;-c&quot;]</span>
<span class="c"># 在window下为 [&quot;cmd&quot;, &quot;/S&quot;, &quot;/C&quot;]</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>